// Code generated by "stringer -type=AccountStatus,Role,OrderStatus,UpChainStatus,StatusCode,RecommendStatus -output=enum_stringer.go -linecomment"; DO NOT EDIT.

package enum

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AccountStatusOK-0]
	_ = x[AccountStatusFrozen-1]
}

const _AccountStatus_name = "正常冻结"

var _AccountStatus_index = [...]uint8{0, 6, 12}

func (i AccountStatus) String() string {
	if i < 0 || i >= AccountStatus(len(_AccountStatus_index)-1) {
		return "AccountStatus(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _AccountStatus_name[_AccountStatus_index[i]:_AccountStatus_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RoleAdmin-0]
	_ = x[RoleAuthor-1]
}

const _Role_name = "管理员作者"

var _Role_index = [...]uint8{0, 9, 15}

func (i Role) String() string {
	if i < 0 || i >= Role(len(_Role_index)-1) {
		return "Role(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Role_name[_Role_index[i]:_Role_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OrderStatusUnpaid-0]
	_ = x[OrderStatusPaid-1]
}

const _OrderStatus_name = "未支付已支付"

var _OrderStatus_index = [...]uint8{0, 9, 18}

func (i OrderStatus) String() string {
	if i < 0 || i >= OrderStatus(len(_OrderStatus_index)-1) {
		return "OrderStatus(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OrderStatus_name[_OrderStatus_index[i]:_OrderStatus_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UpChainStatusUnchain-0]
	_ = x[UpChainStatusChaining-1]
	_ = x[UpChainStatusChained-2]
}

const _UpChainStatus_name = "未上链上链中已上链"

var _UpChainStatus_index = [...]uint8{0, 9, 18, 27}

func (i UpChainStatus) String() string {
	if i < 0 || i >= UpChainStatus(len(_UpChainStatus_index)-1) {
		return "UpChainStatus(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _UpChainStatus_name[_UpChainStatus_index[i]:_UpChainStatus_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StatusCodeOK-0]
	_ = x[StatusCodeBadRequest-4000]
	_ = x[StatusCodeUnauthorized-4001]
	_ = x[StatusCodeForbidden-4003]
	_ = x[StatusCodeNotFound-4004]
	_ = x[StatusCodeServerError-5000]
}

const (
	_StatusCode_name_0 = "ok"
	_StatusCode_name_1 = "参数错误未授权"
	_StatusCode_name_2 = "禁止访问没有找到"
	_StatusCode_name_3 = "服务器开小差了"
)

var (
	_StatusCode_index_1 = [...]uint8{0, 12, 21}
	_StatusCode_index_2 = [...]uint8{0, 12, 24}
)

func (i StatusCode) String() string {
	switch {
	case i == 0:
		return _StatusCode_name_0
	case 4000 <= i && i <= 4001:
		i -= 4000
		return _StatusCode_name_1[_StatusCode_index_1[i]:_StatusCode_index_1[i+1]]
	case 4003 <= i && i <= 4004:
		i -= 4003
		return _StatusCode_name_2[_StatusCode_index_2[i]:_StatusCode_index_2[i+1]]
	case i == 5000:
		return _StatusCode_name_3
	default:
		return "StatusCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RecommendStatusEnable-1]
	_ = x[RecommendStatusDisable-0]
}

const _RecommendStatus_name = "禁用启用"

var _RecommendStatus_index = [...]uint8{0, 6, 12}

func (i RecommendStatus) String() string {
	if i < 0 || i >= RecommendStatus(len(_RecommendStatus_index)-1) {
		return "RecommendStatus(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RecommendStatus_name[_RecommendStatus_index[i]:_RecommendStatus_index[i+1]]
}
